name: Build & Deploy to Azure Container Apps

on:
  push:
    branches: [main]

permissions:
  id-token: write
  contents: read

env:
  RG_NAME: TradeMinutes-RG2
  LOCATION: eastus
  ACR_NAME: trademinutesacr2
  CONTAINERAPP_ENV: trademinutes-env2

  AUTH_APP_NAME: trademinutes-auth-api
  PROFILE_APP_NAME: trademinutes-profile-api
  TASK_APP_NAME: trademinutes-task-api
  FRONTEND_APP_NAME: trademinutes-frontend

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Ensure Resource Group exists
      run: |
        az group show --name $RG_NAME || az group create --name $RG_NAME --location $LOCATION

    - name: Create ACR if not exists
      run: |
        az acr show --name $ACR_NAME --resource-group $RG_NAME || \
        az acr create --resource-group $RG_NAME --name $ACR_NAME --sku Basic --admin-enabled true

    - name: Create Container App Env if not exists
      run: |
        az containerapp env show --name $CONTAINERAPP_ENV --resource-group $RG_NAME || \
        az containerapp env create \
          --name $CONTAINERAPP_ENV \
          --resource-group $RG_NAME \
          --location $LOCATION

    - name: Login to ACR
      run: az acr login --name $ACR_NAME

    # ─── Build & Push Auth API ──────────────────────────────
    - name: Build & Push Auth API
      run: |
        docker build -t $ACR_NAME.azurecr.io/auth-api:${{ github.sha }} ./trademinutes-auth
        docker push $ACR_NAME.azurecr.io/auth-api:${{ github.sha }}

    # ─── Deploy Auth API ────────────────────────────────────
    - name: Deploy Auth API
      run: |
        az containerapp up \
          --name $AUTH_APP_NAME \
          --resource-group $RG_NAME \
          --environment $CONTAINERAPP_ENV \
          --image $ACR_NAME.azurecr.io/auth-api:${{ github.sha }} \
          --target-port 8080 \
          --ingress external \
          --registry-server $ACR_NAME.azurecr.io

    - name: Get Auth API URL
      id: auth
      run: |
        AUTH_URL=$(az containerapp show --name $AUTH_APP_NAME --resource-group $RG_NAME --query properties.configuration.ingress.fqdn -o tsv)
        echo "NEXT_PUBLIC_AUTH_API_URL=https://$AUTH_URL" >> $GITHUB_ENV

    # ─── Build & Push Profile API ───────────────────────────
    - name: Build & Push Profile API
      run: |
        docker build -t $ACR_NAME.azurecr.io/profile-api:${{ github.sha }} ./trademinutes-profile
        docker push $ACR_NAME.azurecr.io/profile-api:${{ github.sha }}

    - name: Deploy Profile API
      run: |
        az containerapp up \
          --name $PROFILE_APP_NAME \
          --resource-group $RG_NAME \
          --environment $CONTAINERAPP_ENV \
          --image $ACR_NAME.azurecr.io/profile-api:${{ github.sha }} \
          --target-port 8080 \
          --ingress external \
          --registry-server $ACR_NAME.azurecr.io

    - name: Get Profile API URL
      id: profile
      run: |
        PROFILE_URL=$(az containerapp show --name $PROFILE_APP_NAME --resource-group $RG_NAME --query properties.configuration.ingress.fqdn -o tsv)
        echo "NEXT_PUBLIC_PROFILE_API_URL=https://$PROFILE_URL" >> $GITHUB_ENV

    # ─── Build & Push Task API ──────────────────────────────
    - name: Build & Push Task API
      run: |
        docker build -t $ACR_NAME.azurecr.io/task-api:${{ github.sha }} ./trademinutes-task
        docker push $ACR_NAME.azurecr.io/task-api:${{ github.sha }}

    - name: Deploy Task API
      run: |
        az containerapp up \
          --name $TASK_APP_NAME \
          --resource-group $RG_NAME \
          --environment $CONTAINERAPP_ENV \
          --image $ACR_NAME.azurecr.io/task-api:${{ github.sha }} \
          --target-port 8080 \
          --ingress external \
          --registry-server $ACR_NAME.azurecr.io

    - name: Get Task API URL
      id: task
      run: |
        TASK_URL=$(az containerapp show --name $TASK_APP_NAME --resource-group $RG_NAME --query properties.configuration.ingress.fqdn -o tsv)
        echo "NEXT_PUBLIC_TASK_API_URL=https://$TASK_URL" >> $GITHUB_ENV

    # ─── Build & Deploy Frontend ────────────────────────────
    - name: Build & Push Frontend
      run: |
        docker build \
          --build-arg NEXT_PUBLIC_AUTH_API_URL=${{ env.NEXT_PUBLIC_AUTH_API_URL }} \
          --build-arg NEXT_PUBLIC_PROFILE_API_URL=${{ env.NEXT_PUBLIC_PROFILE_API_URL }} \
          --build-arg NEXT_PUBLIC_TASK_API_URL=${{ env.NEXT_PUBLIC_TASK_API_URL }} \
          -t $ACR_NAME.azurecr.io/frontend:${{ github.sha }} ./trademinutes-frontend
        docker push $ACR_NAME.azurecr.io/frontend:${{ github.sha }}

    - name: Deploy Frontend App
      run: |
        az containerapp up \
          --name $FRONTEND_APP_NAME \
          --resource-group $RG_NAME \
          --environment $CONTAINERAPP_ENV \
          --image $ACR_NAME.azurecr.io/frontend:${{ github.sha }} \
          --target-port 3000 \
          --ingress external \
          --registry-server $ACR_NAME.azurecr.io \
          --env-vars \
            NEXT_PUBLIC_AUTH_API_URL=${{ env.NEXT_PUBLIC_AUTH_API_URL }} \
            NEXT_PUBLIC_PROFILE_API_URL=${{ env.NEXT_PUBLIC_PROFILE_API_URL }} \
            NEXT_PUBLIC_TASK_API_URL=${{ env.NEXT_PUBLIC_TASK_API_URL }}
